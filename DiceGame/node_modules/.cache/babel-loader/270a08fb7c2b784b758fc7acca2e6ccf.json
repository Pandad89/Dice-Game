{"ast":null,"code":"var _jsxFileName = \"/home/pandad/AB/Bootcamp/Bootcamp/Weekend_Projects/Dice-Game/DiceGame/src/components/GameBoard/GameBoard.js\";\nimport React from 'react';\nimport Dice from '../Dice/Dice';\nimport Player from '../Player/Player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GameBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.rollHandler = () => {\n      const diceRoll1 = Math.floor(Math.random() * 6 + 1);\n      const diceRoll2 = Math.floor(Math.random() * 6 + 1);\n      const diceRollTotal = diceRoll1 + diceRoll2;\n      const isPlayer1 = this.state.activePlayer;\n      this.setState({\n        diceValue1: diceRoll1,\n        diceValue2: diceRoll2,\n        currentRollValue: this.state.currentRollValue + diceRollTotal\n      });\n\n      if (diceRollTotal === 12 && isPlayer1 === true) {\n        this.setState({\n          currentRollValue: 0,\n          playerScore1: this.state.playerScore1 + 12,\n          activePlayer: false\n        });\n      }\n\n      if (diceRollTotal === 12 && isPlayer1 === false) {\n        this.setState({\n          currentRollValue: 0,\n          playerScore1: this.state.playerScore2 + 12,\n          activePlayer: true\n        });\n      }\n    };\n\n    this.holdHandler = () => {\n      const totalScore1 = this.state.playerScore1 + this.state.currentRollValue;\n      const totalScore2 = this.state.playerScore2 + this.state.currentRollValue;\n\n      if (this.state.activePlayer === true) {\n        this.setState({\n          diceValue1: 0,\n          diceValue2: 0,\n          playerScore1: totalScore1,\n          currentRollValue: 0,\n          activePlayer: false\n        });\n      }\n\n      if (this.state.activePlayer === false) {\n        console.log();\n        this.setState({\n          diceValue1: 0,\n          diceValue2: 0,\n          playerScore2: totalScore2,\n          currentRollValue: 0,\n          activePlayer: true\n        });\n      }\n    };\n\n    this.newGame = () => {\n      this.setState({\n        playerScore1: 0,\n        playerScore2: 0,\n        diceValue1: 0,\n        diceValue2: 0,\n        currentRollValue: 0,\n        activePlayer: true\n      });\n    };\n\n    this.state = {\n      playerScore1: 0,\n      playerScore2: 0,\n      diceValue1: 0,\n      diceValue2: 0,\n      currentRollValue: 0,\n      activePlayer: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameBoard\",\n      children: [/*#__PURE__*/_jsxDEV(Player, {\n        active: this.state.activePlayer,\n        className: \"playerLeft\",\n        playerName: \"Player 1\",\n        totalScore: this.state.playerScore1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dice, {\n        holdHandler: this.holdHandler,\n        rollHandler: this.rollHandler,\n        newGame: this.newGame,\n        roll1: this.state.diceValue1,\n        roll2: this.state.diceValue2,\n        currentRoll: this.state.currentRollValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        active: !this.state.activePlayer,\n        className: \"playerRight\",\n        playerName: \"Player 2\",\n        totalScore: this.state.playerScore2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GameBoard;","map":{"version":3,"sources":["/home/pandad/AB/Bootcamp/Bootcamp/Weekend_Projects/Dice-Game/DiceGame/src/components/GameBoard/GameBoard.js"],"names":["React","Dice","Player","GameBoard","Component","constructor","props","rollHandler","diceRoll1","Math","floor","random","diceRoll2","diceRollTotal","isPlayer1","state","activePlayer","setState","diceValue1","diceValue2","currentRollValue","playerScore1","playerScore2","holdHandler","totalScore1","totalScore2","console","log","newGame","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Dice from '../Dice/Dice';\nimport Player from '../Player/Player';\n\nclass GameBoard extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            playerScore1: 0,\n            playerScore2: 0,\n            diceValue1: 0,\n            diceValue2: 0,\n            currentRollValue: 0,\n            activePlayer: true,\n        }\n    }\n        rollHandler = () => {\n            const diceRoll1 = Math.floor((Math.random() *6) + 1);\n            const diceRoll2 = Math.floor((Math.random() *6) + 1);\n            const diceRollTotal = diceRoll1 + diceRoll2;\n            const isPlayer1 = this.state.activePlayer;\n            this.setState({\n                diceValue1: diceRoll1,\n                diceValue2: diceRoll2,\n                currentRollValue: this.state.currentRollValue + diceRollTotal,\n            })\n            if (diceRollTotal === 12 && isPlayer1 === true) {\n                this.setState({\n                    currentRollValue: 0,\n                    playerScore1: this.state.playerScore1 + 12,\n                    activePlayer: false,\n                })\n\n            }\n            if (diceRollTotal === 12 && isPlayer1 === false) {\n                this.setState({\n                    currentRollValue: 0,\n                    playerScore1: this.state.playerScore2 + 12,\n                    activePlayer: true,\n                })\n\n            }\n        }\n        holdHandler = () => {\n            const totalScore1 = this.state.playerScore1 + this.state.currentRollValue;\n            const totalScore2 = this.state.playerScore2 + this.state.currentRollValue;\n            if(this.state.activePlayer === true){\n                this.setState({\n                    diceValue1: 0,\n                    diceValue2: 0,\n                    playerScore1: totalScore1,\n                    currentRollValue: 0,\n                    activePlayer: false,\n                })\n            }\n            if(this.state.activePlayer  === false){\n                console.log()\n                this.setState({\n                    diceValue1: 0,\n                    diceValue2: 0,\n                    playerScore2: totalScore2,\n                    currentRollValue: 0,\n                    activePlayer: true,\n                })\n            }\n        }\n        newGame = () => {\n            this.setState({\n                playerScore1: 0,\n                playerScore2: 0,\n                diceValue1: 0,\n                diceValue2: 0,\n                currentRollValue: 0,\n                activePlayer: true,\n            })\n        }\n\n    render() {\n        return (\n            <div className='GameBoard'>\n                <Player  active={this.state.activePlayer} className=\"playerLeft\" playerName=\"Player 1\" totalScore={this.state.playerScore1} />\n                <Dice holdHandler={this.holdHandler} rollHandler={this.rollHandler} newGame={this.newGame} roll1={this.state.diceValue1} roll2={this.state.diceValue2} currentRoll={this.state.currentRollValue}/>\n                <Player active={!this.state.activePlayer} className=\"playerRight\" playerName=\"Player 2\" totalScore={this.state.playerScore2}/>\n            </div>\n        )\n    }\n}\n\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}